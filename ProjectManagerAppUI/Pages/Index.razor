@page "/"

@inject AuthenticationStateProvider authProvider;
@inject ICategoryData categoryData
@inject IStatusData statusData
@inject IProjectInfoData projectinfoData
@inject IUserData userData
@inject NavigationManager navManager
@inject ProtectedSessionStorage sessionStorage

<h1 class="page-heading text-uppercase mb-4">Project Listings</h1>
<div class="projectinfo-container">
    <button @onclick="LoadCreatePage" class="projectinfo-btn btn btn-outline-light btn-lg text-uppercase">New Project</button>
</div>

<div class="row">
    <div class="projects-count col-md-4 mt-2">@projects?.Count Projects</div>
    <div class="col-md-4 col-xl-5 btn-group">
        <button class="btn btn-order @SortedByNewClass(true)" @onclick="(() => OrderByNew(true))">New</button>
        <button class="btn btn-order @SortedByNewClass(false)" @onclick="(() => OrderByNew(false))">Popular</button>
    </div>
    <div class="col-md-4 col-xl-3 search-box">
        <input type="text" placeholder="Search" 
            aria-label="Search box" class="form-control rounded-control"
            @oninput="((txt) => OnSearchInput((string)txt.Value))" />
    </div>
    <div class="col-12 d-block d-md-none">
        @if (categories is not null && showCategories)
        {
            <div class="categories">
                <span class="text-uppercase fw-bold">Category</span>
                <div class="@GetSelectedCategory()" @onclick="(() => OnCategoryClick())">All</div>
                @foreach (var c in categories)
                {
                    <div class="@GetSelectedCategory(c.CategoryName)" 
                        @onclick="(() => OnCategoryClick(c.CategoryName))">
                        @c.CategoryName
                    </div>
                }
            </div>
        } else {
            <div class="categories" @onclick="(() => showCategories = true)">
                <span class="selected-category">@selectedCategory</span>
            </div>
        }
        @if (statusData is not null && showStatuses)
        {
            <div class="statuses">
                <span class="text-uppercase fw-bold">Status</span>
                <div class="GetSelectedStatus()" @onclick="(()=> OnStatusClick())">All</div>
                @foreach (var s in statuses)
                {
                    <div class="@GetSelectedStatus(s.StatusName)"
                        @onclick="(() => OnStatusClick(s.StatusName))">
                        @s.StatusName
                    </div>
                }
            </div>
        }
        else
        {
            <div class="statuses" @onclick="(() => showStatuses = true)">
                <span class="selected-status">@selectedStatus</span>
            </div>       
        }
    </div>
</div>

<div class="row">
    <div class="col-md-8 col-xl-9">
        @if (projects is not null)
        {
            <Virtualize Items="@projects" Context="s" OverscanCount="10">
                <div class="project-entry">
                    <div class="@GetVoteClass(s)" @onclick="(() => VoteUp(s))">
                        <div class="text-uppercase">@GetUpvoteTopText(s)</div>
                        <span class="oi oi-caret-top entry-upvote"></span>
                        <div class="text-uppercase">@GetUpvoteBottomText(s)</div>
                    </div>
                    <div class="project-entry-text">
                        <div class="project-entry-text-title" @onclick="(()=> OpenDetails(s))">
                            @s.ProjectName
                        </div>
                        @if(archivingProject is null || archivingProject.Id != s.Id)
                    {
                        <div class="project-entry-bottom">
                            <div class="project-entry-text-category" @onclick="(() => OpenDetails(s))">
                                @s.Category?.CategoryName
                            </div>
                            <AuthorizeView Policy="Admin">
                                <button @onclick="(() => archivingProject = s)" class="btn-link project-entry-text-category btn-archive">
                                    archive
                                </button>
                            </AuthorizeView>
                        </div>
                    }
                    else
                    {
                        <div class="project-entry-bottom">
                            <button class="btn btn-archive btn-archive-confirm" @onclick="ArchiveProject">
                                confirm
                            </button>
                            <button class="btn btn-archive btn-archive-reject" @onclick="(() => archivingProject = null)">
                                cancel
                            </button>
                        </div>
                    }

                    </div>
                    <div class="project-entry-status @GetStatusClass(s)">
                        <div class="project-entry-status-text">
                            @s.ProjectStatus?.StatusName
                        </div>
                    </div>
                </div>
            </Virtualize>
        }
    </div>
    <div class="col-md-4 col-xl-3 d-none d-md-block">
        @if (categories is not null)
        {
            <div class="categories">
                <span class="text-uppercase fw-bold">Category</span>
                <div class="@GetSelectedCategory()" @onclick="(() => OnCategoryClick())">All</div>
                @foreach(var c in categories)
                {
                    <div class="@GetSelectedCategory(c.CategoryName)" @onclick="(() => OnCategoryClick(c.CategoryName))">@c.CategoryName</div>
                }
            </div>
        }
        @if (statuses is not null)
        {
            <div class="statuses">
                <span class="text-uppercase fw-bold">Status</span>
                <div class="@GetSelectedStatus()" @onclick="(() => OnStatusClick())">All</div>
                @foreach(var s in statuses)
                {
                    <div class="@GetSelectedStatus(s.StatusName)" @onclick="(() => OnStatusClick(s.StatusName))">@s.StatusName</div>
                }
            </div>
        }
    </div>
</div>


